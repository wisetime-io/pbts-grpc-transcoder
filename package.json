{
  "name": "pbts-grpc-transcoder",
  "version": "0.2.0",
  "homepage": "https://wisetime.com",
  "repository": {
    "type": "git",
    "url": "https://github.com/wisetime-io/pbts-grpc-transcoder.git"
  },
  "main": "dist/executor/index.js",
  "dependencies": {
    "@types/jwt-decode": "^2.2.1",
    "@types/node": "^12.20.25",
    "@types/ramda": "^0.26.44",
    "fp-ts": "^2.11.3",
    "immer": "^9.0.6",
    "node-fetch": "^2.6.4",
    "protobufjs": "^6.11.2",
    "ramda": "^0.27.1",
    "retry-ts": "^0.1.3",
    "ts-node": "^10.2.1",
    "typescript": "^4.4.3"
  },
  "devDependencies": {
    "@types/faker": "^4.1.11",
    "@types/jest": "^24.9.1",
    "@typescript-eslint/eslint-plugin": "^2.34.0",
    "@typescript-eslint/parser": "^2.34.0",
    "babel-core": "^7.0.0-bridge.0",
    "es6-promise": "^4.2.8",
    "eslint": "^6.8.0",
    "eslint-plugin-react": "^7.26.0",
    "factory.ts": "^0.5.2",
    "faker": "^4.1.0",
    "jest": "24.9.0",
    "rxjs-marbles": "^6.0.0",
    "ts-jest": "^26.5.6"
  },
  "files": [
    "dist",
    "package.json",
    "LICENSE",
    "README.md"
  ],
  "scripts": {
    "pretest": "cd src/http-transcoder/tests; make protobuf",
    "test": "jest --no-cache",
    "build": "tsc --module commonjs",
    "publish:lib": "make clean init && npm run build && npm publish",
    "eslint": "eslint  --quiet src/executor/* src/http-transcoder/*.ts"
  },
  "eslintConfig": {
    "parser": "@typescript-eslint/parser",
    "extends": [
      "plugin:react/recommended",
      "plugin:@typescript-eslint/recommended"
    ],
    "rules": {
      "indent": [
        "error",
        2,
        {
          "SwitchCase": 1,
          "FunctionDeclaration": {
            "parameters": "first"
          }
        }
      ],
      "semi": [
        "error",
        "never"
      ],
      "quotes": [
        "error",
        "double"
      ],
      "prefer-destructuring": 1,
      "react/display-name": 0,
      "@typescript-eslint/member-delimiter-style": [
        "error",
        {
          "multiline": {
            "delimiter": "comma",
            "requireLast": true
          },
          "singleline": {
            "delimiter": "comma",
            "requireLast": false
          }
        }
      ],
      "object-curly-spacing": [
        "error",
        "always",
        {
          "arraysInObjects": false,
          "objectsInObjects": false
        }
      ]
    }
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ]
  }
}
